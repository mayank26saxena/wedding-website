name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If there's no package.json, this will just skip installs/builds
      - name: Install deps (if any)
        run: |
          if [ -f package.json ]; then
            npm ci || npm i
          fi

      - name: Build (static / Vite / CRA / Next export)
        run: |
          BUILD_DIR="."
          if [ -f package.json ]; then
            # Prefer explicit build:static if you add it
            if npm run | grep -q "build:static"; then
              npm run build:static
              BUILD_DIR="out"
            else
              # Try a standard build
              if npm run | grep -q "build"; then
                npm run build || true
              fi
              # Detect common outputs
              if [ -d dist ]; then BUILD_DIR="dist"; fi
              if [ -d build ]; then BUILD_DIR="build"; fi
              if [ -d out ]; then BUILD_DIR="out"; fi
              if [ -d public ] && [ "$BUILD_DIR" = "." ]; then BUILD_DIR="public"; fi
            fi
          fi
          echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV

      - name: SPA 404 fallback (safe even if not SPA)
        run: |
          if [ -f "$BUILD_DIR/index.html" ] && [ ! -f "$BUILD_DIR/404.html" ]; then
            cp "$BUILD_DIR/index.html" "$BUILD_DIR/404.html"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
